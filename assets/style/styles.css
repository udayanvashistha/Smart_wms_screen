/* Root variables */
:root {
  --circle-size: 90px;
  --circle-color: green;
  --card-padding: 20px;
  --card-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  --card-border-radius: 10px;
  --card-bg-color: #fff;
  --fg: #e91e63; /* Menu Item and Button Color */
  --bg: #8bc34a; /* Background Color */
  --open-distance: 150px; /* Distance for menu items from center */
}

body, html {
  height: 100%;
  margin: 0;
}

.bg {
  background-image: linear-gradient(rgba(0, 0, 0, 0.663), rgba(0, 0, 0, 0.696)), url("../../images/bg2.jpg");
  height: 100vh; 
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  overflow: auto;
}

/* Logo styling */
.logo {
  height: 40px;
  z-index: 10;
  margin: 10px 10px 0 10px;
}



/*---------------------------- Fault Card Styling ---------------------------------------------------*/
.container {
  max-width: 900px;
}

.fault-card {
  background-color: rgba(255, 255, 255, 0.9);
  border-radius: 8px;
  width: 90%;
  margin-left: -30%;
}

.card-body {
  padding: 15px;
}

h2 {
  color: #333;
  font-weight: 500;
}

.table {
  margin: 0;
}

.thead-dark th {
  background-color: #343a40;
  color: #ffffff;
}

.table-hover tbody tr:hover {
  background-color: #f1f3f5;
}

/*----------------CONVEYOR Case ID ---------------------------------------------------*/


.case-id-container {
  display: flex;
  align-items: center;
  background-color: #e9f5fb;
  padding: 12px 20px;
  border-radius: 10px;
  border: 2px solid #17a2b8;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  width: 50%;
  margin: 0 auto;
  position: relative; 
  margin-left: 15%;
  margin-top: 3%;
  margin-bottom: 3%;
}

.case-id {
  flex: 1;
  font-size: 1.2rem;
  color: #343a40;
  font-weight: bold;
  text-align: center;
  padding: 10px;
}

.case-id i {
  margin-right: 8px;
  color: #17a2b8;
  font-size: 1.5rem; 
}

.divider {
  width: 2px;
  height: 40px;
  background-color: #17a2b8;
  border-radius: 5px;
}





/**----------------End and Call Button------------------*/
.emergency-btn {
  background-color: red;
  border-color: darkred;
}

.supervisor-btn {
  background-color: blue;
  border-color: darkblue;
}
.rowb {
  display: flex;
  flex-wrap: nowrap; 
  gap: 10%;
}





/*------------------------------------------POP UP MENU-----------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------------------------*/

/* Hide the checkbox */
.menu-open {
  display: none;
}

/* Hamburger Icon and Menu Button */
.menu-open-button {
  width: 80px;
  height: 80px;
  background: var(--fg);
  border-radius: 50%;
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2;
  cursor: pointer;
  transition: transform ease-out 200ms;
  left: 84%;
  top: 22%;
}

.hamburger {
  width: 30px;
  height: 3px;
  background-color: white;
  position: absolute;
  transition: all 0.3s ease;
}

.hamburger-1 {
  transform: translateY(-8px);
}

.hamburger-2 {
  transform: translateY(0);
}

.hamburger-3 {
  transform: translateY(8px);
}

/* When Checked, Transform Hamburger to "X" */
.menu-open:checked + .menu-open-button .hamburger-1 {
  transform: translateY(0) rotate(45deg);
}

.menu-open:checked + .menu-open-button .hamburger-2 {
  opacity: 0; /* Hide the middle line */
}

.menu-open:checked + .menu-open-button .hamburger-3 {
  transform: translateY(0) rotate(-45deg);
}

/* Menu Items */
.menu-item {
  width: 80px;
  height: 80px;
  background: var(--fg);
  border-radius: 50%;
  position: absolute;
  top: 28%;
  left: 86%;
  transform: translate(-50%, -50%);
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: transform 0.5s ease, opacity 0.3s ease;
  opacity: 0; /* Hidden initially */
  pointer-events: none; /* Disable interaction initially */
}

.menu-item:hover {
  background: white;
  color: var(--fg);
}

/* When the Checkbox is Checked, Show the Menu Items */
.menu-open:checked ~ .menu-item {
  opacity: 1;
  pointer-events: auto; /* Enable interaction when visible */
}

/* Use cosine and sine to place the items around a complete circle */
.menu-open:checked ~ .menu-item:nth-child(3) {
  transform: translate(calc(-50% + var(--open-distance) * cos(0deg)), calc(-50% + var(--open-distance) * sin(0deg)));
}

.menu-open:checked ~ .menu-item:nth-child(4) {
  transform: translate(calc(-50% + var(--open-distance) * cos(60deg)), calc(-50% + var(--open-distance) * sin(60deg)));
}

.menu-open:checked ~ .menu-item:nth-child(5) {
  transform: translate(calc(-50% + var(--open-distance) * cos(120deg)), calc(-50% + var(--open-distance) * sin(120deg)));
}

.menu-open:checked ~ .menu-item:nth-child(6) {
  transform: translate(calc(-50% + var(--open-distance) * cos(180deg)), calc(-50% + var(--open-distance) * sin(180deg)));
}

.menu-open:checked ~ .menu-item:nth-child(7) {
  transform: translate(calc(-50% + var(--open-distance) * cos(240deg)), calc(-50% + var(--open-distance) * sin(240deg)));
}

.menu-open:checked ~ .menu-item:nth-child(8) {
  transform: translate(calc(-50% + var(--open-distance) * cos(300deg)), calc(-50% + var(--open-distance) * sin(300deg)));
}

.menu-open:checked ~ .menu-item:nth-child(9) {
  transform: translate(calc(-50% + var(--open-distance) * cos(360deg)), calc(-50% + var(--open-distance) * sin(360deg)));
}


